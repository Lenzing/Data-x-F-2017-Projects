library(XML)
library(stringr)
URL = 'http://www.dtic.mil/doctrine/dod_dictionary/acronym/num/'
search_results = htmlParse(readLines(URL))
links = getHTMLLinks(search_results)
acs = str_extract(links, "\\'[0-9]+\\.")
acs = unlist(lapply(acs, substr, 2, 6))
URL2 = str_c(URL, acs, '.html')
htmlParse(readLines(URL2[1]))
Defhtml = htmlParse(readLines(URL2[0]))
Defhtml = htmlParse(readLines(URL2[1]))
str_extract(Defhtml, "<title>[^<]+")
Defhtml = readLines(URL2[1])
str_extract(Defhtml, "<title>[^<]+")
Defhtml = read(URL2[1])
Defhtml = readLines(URL2[1])
Defhtml
readLines(URL2[2])
readLines(URL2[3])
readLines(URL2[4])
URL = 'http://www.dtic.mil/doctrine/dod_dictionary/acronym/a/'
search_results = htmlParse(readLines(URL))
links = getHTMLLinks(search_results)
acs = str_extract(links, "\\'[0-9]+\\.")
acs = unlist(lapply(acs, substr, 2, 6))
URL2 = str_c(URL, acs, '.html')
Defhtml = readLines(URL2[1])
Defhtml
readLines(URL2[2])
str_extract(Defhtml[4], "<title>[^<]+")
ACR = str_extract(Defhtml[4], "<title>[^<]+")
substr(ACR, 8, length(ACR))
nchar(ACR)
substr(ACR, 8, nchar(ACR))
readLines(URL2[1])
readLines(URL2[5])
readLines(URL2[7])
readLines(URL2[20])
readLines(URL2[1])
Defhtml = readLines(URL2[1])
str_extract(Defhtml[8], "[\\t ][^<BR]+")
str_extract(Defhtml[8], "[\\t] [^<BR]+")
str_extract(Defhtml[8], "([\\t] )|(R/>)[^<BR]+")
str_extract(Defhtml[8], "([[\\t] )|(R/>)][^<BR]+")
str_extract(Defhtml[8], "([\\t] )|(R/>) [^<BR]+")
str_extract(Defhtml[8], "([\\t] |R/>) [^<BR]+")
str_extract(Defhtml[8], "([\\t] |R/>)[^<BR]+")
Defhtml = readLines(URL2[5])
str_extract(Defhtml[8], "([\\t] |R/>)[^<BR]+")
df = data.frame()
ACR = str_extract(Defhtml[4], "<title>[^<]+")
ACR = substr(ACR, 8, nchar(ACR))
Def = str_extract(Defhtml[8], "([\\t] |R/>)[^<BR]+")
Def = substr(Def, 4, nchar(Def))
rbind(df, c(ACR, Def))
names(df) <- c('Acronym', 'Definition')
df = rbind(df, c(ACR, Def))
df = rbind(df, c(ACR, Def))
df
names(df) <- c('Acronym', 'Definition')
df
df = data.frame(row.names = c('Acronym', 'Definition'))
df
df = rbind(df, c(ACR, Def))
df
for (let in letters){
URL = str_c('http://www.dtic.mil/doctrine/dod_dictionary/acronym/', let, '/')
search_results = htmlParse(readLines(URL))
links = getHTMLLinks(search_results)
acs = str_extract(links, "\\'[0-9]+\\.")
acs = unlist(lapply(acs, substr, 2, 6))
URL2 = str_c(URL, acs, '.html')
for (linkURL in URL2){
Defhtml = readLines(linkURL)
ACR = str_extract(Defhtml[4], "<title>[^<]+")
ACR = substr(ACR, 8, nchar(ACR))
Def = str_extract(Defhtml[8], "([\\t] |R/>)[^<BR]+")
Def = substr(Def, 4, nchar(Def))
df = rbind(df, c(ACR, Def))
}
}
names(df) <- c('Acronym', 'Definition')
df
tail(df)
rbind(df, c(ACR, Def))
df = data.frame()
df = rbind(df, c(ACR, Def))
Defhtml = readLines(URL2[1])
ACR = str_extract(Defhtml[4], "<title>[^<]+")
ACR = substr(ACR, 8, nchar(ACR))
Def = str_extract(Defhtml[8], "([\\t] |R/>)[^<BR]+")
Def = substr(Def, 4, nchar(Def))
df = rbind(df, c(ACR, Def))
df = data.frame(stringsAsFactors = FALSE)
df = rbind(df, c(ACR, Def))
Defhtml = readLines(URL2[2])
ACR = str_extract(Defhtml[4], "<title>[^<]+")
ACR = substr(ACR, 8, nchar(ACR))
Def = str_extract(Defhtml[8], "([\\t] |R/>)[^<BR]+")
Def = substr(Def, 4, nchar(Def))
df = rbind(df, c(ACR, Def))
length(df)
df
df = data.frame(stringsAsFactors = FALSE)
df
length(df)
df[length(df)+1,] = c(ACR, Def)
df
df = data.frame()
df = rbind(df, c(ACR, Def))
df
Defhtml = readLines(URL2[1])
ACR = str_extract(Defhtml[4], "<title>[^<]+")
ACR = substr(ACR, 8, nchar(ACR))
Def = str_extract(Defhtml[8], "([\\t] |R/>)[^<BR]+")
Def = substr(Def, 4, nchar(Def))
df = rbind(df, data.frame(c(ACR, Def)))
df
data.frame(c(ACR, Def))
t(data.frame(c(ACR, Def)))
ACR = str_extract(Defhtml[4], "<title>[^<]+")
ACR = substr(ACR, 8, nchar(ACR))
Def = str_extract(Defhtml[8], "([\\t] |R/>)[^<BR]+")
Def = substr(Def, 4, nchar(Def))
df = rbind(df, t(data.frame(c(ACR, Def))))
list(ACR, Def)
list(Acronym = ACR, Definition=Def)
df = list(Acronym = ACR, Definition=Def)
df[1]
append(df, c(ACR, Def))
append(df$Acronym, ACR)
df$Acronym = append(df$Acronym, ACR)
df
df$Definition = append(df$Definition, Def)
df
data.frame(df)
df = list(Acronym = c(), Definition = c())
df$Acronym = append(df$Acronym, ACR)
df
df$Definition = append(df$Definition, Def)
df
df = list(Acronym = c(), Definition = c())
for (let in letters){
URL = str_c('http://www.dtic.mil/doctrine/dod_dictionary/acronym/', let, '/')
search_results = htmlParse(readLines(URL))
links = getHTMLLinks(search_results)
acs = str_extract(links, "\\'[0-9]+\\.")
acs = unlist(lapply(acs, substr, 2, 6))
URL2 = str_c(URL, acs, '.html')
for (linkURL in URL2){
Defhtml = readLines(linkURL)
ACR = str_extract(Defhtml[4], "<title>[^<]+")
ACR = substr(ACR, 8, nchar(ACR))
Def = str_extract(Defhtml[8], "([\\t] |R/>)[^<BR]+")
Def = substr(Def, 4, nchar(Def))
df$Acronym = append(df$Acronym, ACR)
df$Definition = append(df$Definition, Def)
}
}
URL = 'http://www.dtic.mil/doctrine/dod_dictionary/acronym/num/'
search_results = htmlParse(readLines(URL))
links = getHTMLLinks(search_results)
acs = str_extract(links, "\\'[0-9]+\\.")
acs = unlist(lapply(acs, substr, 2, 6))
#create new URLs to query to find the definitions of each acronym
URL2 = str_c(URL, acs, '.html')
#loop through all the acronyms starting with current letter
for (linkURL in URL2){
Defhtml = readLines(linkURL)
ACR = str_extract(Defhtml[4], "<title>[^<]+")
ACR = substr(ACR, 8, nchar(ACR))
Def = str_extract(Defhtml[8], "([\\t] |R/>)[^<BR]+")
Def = substr(Def, 4, nchar(Def))
df$Acronym = append(df$Acronym, ACR)
df$Definition = append(df$Definition, Def)
}
df2 = data.frame(df)
View(df2)
View(df2)
ACR = str_extract(Defhtml[4], "<title>[^<]+")
ACR = substr(ACR, 8, nchar(ACR))
Def = str_extract(Defhtml[8], "([\\t] |R/>)[^(<BR)]+")
Def = substr(Def, 4, nchar(Def))
URL = 'http://www.dtic.mil/doctrine/dod_dictionary/acronym/a/'
search_results = htmlParse(readLines(URL))
links = getHTMLLinks(search_results)
acs = str_extract(links, "\\'[0-9]+\\.")
acs = unlist(lapply(acs, substr, 2, 6))
#create new URLs to query to find the definitions of each acronym
URL2 = str_c(URL, acs, '.html')
Defhtml = readLines(URL2[34])
Defhtml
ACR = str_extract(Defhtml[4], "<title>[^<]+")
ACR = substr(ACR, 8, nchar(ACR))
Def = str_extract(Defhtml[8], "([\\t] |R/>)[^(<BR)]+")
Def = substr(Def, 4, nchar(Def)
str_extract(Defhtml[8], "([\\t] |R/>)^<+")
str_extract(Defhtml[8], "([\\t] |R/>)^<+")
str_extract(Defhtml[8], "([\\t] |R/>)[^<]+")
str_extract(Defhtml[8], "([\\t] |R/>)(^<)+")
str_extract(Defhtml[8], "([\\t] |R/>)(?!<BR)+")
str_extract(Defhtml[8], "([\\t] |R/>)[?!<BR]+")
str_extract(Defhtml[8], "([\\t] |R/>)[^!<BR]+")
str_extract(Defhtml[8], "([\\t] |R/>)[^<]+")
df = list(Acronym = c(), Definition = c())
for (let in letters){
print(let)
#get the links for all the acronyms starting with letter let
URL = str_c('http://www.dtic.mil/doctrine/dod_dictionary/acronym/', let, '/')
search_results = htmlParse(readLines(URL))
links = getHTMLLinks(search_results)
acs = str_extract(links, "\\'[0-9]+\\.")
acs = unlist(lapply(acs, substr, 2, 6))
#create new URLs to query to find the definitions of each acronym
URL2 = str_c(URL, acs, '.html')
#loop through all the acronyms starting with current letter
for (linkURL in URL2){
Defhtml = readLines(linkURL)
ACR = str_extract(Defhtml[4], "<title>[^<]+")
ACR = substr(ACR, 8, nchar(ACR))
Def = str_extract(Defhtml[8], "([\\t] |R/>)[^<]+")
Def = substr(Def, 4, nchar(Def))
df$Acronym = append(df$Acronym, ACR)
df$Definition = append(df$Definition, Def)
}
}
df2 = data.frame(df)
#do the acronyms starting with a number
URL = 'http://www.dtic.mil/doctrine/dod_dictionary/acronym/num/'
search_results = htmlParse(readLines(URL))
links = getHTMLLinks(search_results)
acs = str_extract(links, "\\'[0-9]+\\.")
acs = unlist(lapply(acs, substr, 2, 6))
#create new URLs to query to find the definitions of each acronym
URL2 = str_c(URL, acs, '.html')
#loop through all the acronyms starting with current letter
for (linkURL in URL2){
Defhtml = readLines(linkURL)
ACR = str_extract(Defhtml[4], "<title>[^<]+")
ACR = substr(ACR, 8, nchar(ACR))
Def = str_extract(Defhtml[8], "([\\t] |R/>)[^<]+")
Def = substr(Def, 4, nchar(Def))
df$Acronym = append(df$Acronym, ACR)
df$Definition = append(df$Definition, Def)
}
df2 = data.frame(df)
View(df2)
View(df2)
write.csv(df2, file = 'ACRscrape.csv')
